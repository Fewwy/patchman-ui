// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdvisoryHeader Should match the snapshots when loaded 1`] = `
<Grid
  hasGutter={true}
  style={
    {
      "minHeight": 150,
    }
  }
>
  <GridItem
    md={8}
    sm={12}
  >
    <WithLoader
      centered={true}
      loading={false}
      variant="spinner"
    >
      <Stack
        hasGutter={true}
      >
        <StackItem />
        <StackItem
          style={
            {
              "whiteSpace": "pre-line",
            }
          }
        >
          Kernel-based Virtual.
        </StackItem>
        <StackItem>
          Issued 30 June 2020
          <br />
          Modified 30 June 2020
        </StackItem>
      </Stack>
    </WithLoader>
  </GridItem>
  <GridItem
    md={4}
    sm={12}
  >
    <Flex
      flex={
        {
          "default": "column",
        }
      }
    >
      <FlexItem>
        <Split
          className="infobox"
          hasGutter={true}
        >
          <SplitItem
            isFilled={true}
          >
            <Flex
              flex={
                {
                  "default": "column",
                }
              }
            >
              <FlexItem
                spacer={
                  {
                    "default": "spacerNone",
                  }
                }
              >
                <Title
                  headingLevel="h5"
                >
                  Advisory type
                </Title>
              </FlexItem>
              <FlexItem
                spacer={
                  {
                    "default": "spacerSm",
                  }
                }
              >
                <AdvisoryType
                  type="security"
                />
              </FlexItem>
            </Flex>
          </SplitItem>
        </Split>
      </FlexItem>
      <FlexItem>
        <AdvisorySeverityInfo
          severity={
            {
              "color": "#ec7a08",
              "label": "Important",
              "text": "This rating is given to flaws that can easily compromise the confidentiality, integrity, or availability of resources. These are the types of vulnerabilities that allow local users to gain privileges, allow unauthenticated remote users to view resources that should otherwise be protected by authentication, allow authenticated remote users to execute arbitrary code, or allow remote users to cause a denial of service.",
              "value": 3,
            }
          }
        />
      </FlexItem>
    </Flex>
  </GridItem>
  <Suspense
    fallback={<React.Fragment />}
  >
    <Component />
  </Suspense>
</Grid>
`;

exports[`AdvisoryHeader Should match the snapshots when loading 1`] = `
<Grid
  hasGutter={true}
  style={
    {
      "minHeight": 150,
    }
  }
>
  <GridItem
    md={8}
    sm={12}
  >
    <WithLoader
      centered={true}
      loading={true}
      variant="spinner"
    >
      <Stack
        hasGutter={true}
      >
        <StackItem />
        <StackItem
          style={
            {
              "whiteSpace": "pre-line",
            }
          }
        >
          Kernel-based Virtual.
        </StackItem>
        <StackItem>
          Issued 30 June 2020
          <br />
          Modified 30 June 2020
        </StackItem>
      </Stack>
    </WithLoader>
  </GridItem>
  <GridItem
    md={4}
    sm={12}
  >
    <Flex
      flex={
        {
          "default": "column",
        }
      }
    >
      <FlexItem>
        <Split
          className="infobox"
          hasGutter={true}
        >
          <SplitItem
            isFilled={true}
          >
            <Flex
              flex={
                {
                  "default": "column",
                }
              }
            >
              <FlexItem
                spacer={
                  {
                    "default": "spacerNone",
                  }
                }
              >
                <Title
                  headingLevel="h5"
                >
                  Advisory type
                </Title>
              </FlexItem>
              <FlexItem
                spacer={
                  {
                    "default": "spacerSm",
                  }
                }
              >
                <AdvisoryType
                  type="security"
                />
              </FlexItem>
            </Flex>
          </SplitItem>
        </Split>
      </FlexItem>
      <FlexItem>
        <AdvisorySeverityInfo
          severity={
            {
              "color": "#ec7a08",
              "label": "Important",
              "text": "This rating is given to flaws that can easily compromise the confidentiality, integrity, or availability of resources. These are the types of vulnerabilities that allow local users to gain privileges, allow unauthenticated remote users to view resources that should otherwise be protected by authentication, allow authenticated remote users to execute arbitrary code, or allow remote users to cause a denial of service.",
              "value": 3,
            }
          }
        />
      </FlexItem>
    </Flex>
  </GridItem>
  <Suspense
    fallback={<React.Fragment />}
  >
    <Component />
  </Suspense>
</Grid>
`;
